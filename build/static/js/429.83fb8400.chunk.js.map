{"version":3,"file":"static/js/429.83fb8400.chunk.js","mappings":"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","sources":["features/user/components/UserProfile.js","pages/UserProfilePage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectUserInfo,\n  selectUserUpdateStatus,\n  updateUserAsync,\n} from \"../userSlice\";\nimport { useForm } from \"react-hook-form\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { toast } from \"react-toastify\";\n\nexport default function UserProfile() {\n  const dispatch = useDispatch();\n  const userInfo = useSelector(selectUserInfo);\n  const [selectedEditIndex, setSelectedEditIndex] = useState(-1);\n  const [showAddAddressForm, setShowAddAddressForm] = useState(false);\n  const selectUserStatus = useSelector(selectUserUpdateStatus);\n  //TODO: We will add payment section when we work on backend.\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  const handleEdit = (addressUpdate, index) => {\n    const newUser = { ...userInfo, addresses: [...userInfo.addresses] }; // for shallow copy issue\n    newUser.addresses.splice(index, 1, addressUpdate);\n    const promise = dispatch(updateUserAsync(newUser));\n    toast.promise(promise, {\n      pending: {\n        render: \"Updating...\",\n        className: \"custom-toast-pending\",\n      },\n      success: {\n        render: () => `Address updated Successfully`,\n        className: \"custom-toast-success\",\n        autoClose: 1000,\n      },\n      error: {\n        render: \"error updating address\",\n        className: \"custom-toast-error\",\n      },\n    });\n    setSelectedEditIndex(-1);\n  };\n\n  const handleRemove = (e, index) => {\n    const newUser = { ...userInfo, addresses: [...userInfo.addresses] }; // for shallow copy issue\n    newUser.addresses.splice(index, 1);\n    const promise = dispatch(updateUserAsync(newUser));\n    toast.promise(promise, {\n      pending: {\n        render: \"Removing...\",\n        className: \"custom-toast-pending\",\n      },\n      success: {\n        render: () => `Address removed Successfully`,\n        className: \"custom-toast-success\",\n        autoClose: 1000,\n      },\n      error: {\n        render: \"error removing address\",\n        className: \"custom-toast-error\",\n      },\n    });\n  };\n\n  const handleEditForm = (index) => {\n    setSelectedEditIndex(index);\n    const address = userInfo.addresses[index];\n    setValue(\"name\", address.name);\n    setValue(\"email\", address.email);\n    setValue(\"city\", address.city);\n    setValue(\"state\", address.state);\n    setValue(\"pinCode\", address.pinCode);\n    setValue(\"phone\", address.phone);\n    setValue(\"street\", address.street);\n  };\n\n  const handleAddAddress = (address) => {\n    const newUser = {\n      ...userInfo,\n      addresses: [...userInfo.addresses, address],\n    };\n    const promise = dispatch(updateUserAsync(newUser));\n    toast.promise(promise, {\n      pending: {\n        render: \"loading content\",\n        className: \"custom-toast-pending\",\n      },\n      success: {\n        render: () => `Address added successfully`,\n        className: \"custom-toast-success\",\n        autoClose: 1000,\n      },\n      error: {\n        render: \"Error adding address\",\n        className: \"custom-toast-error\",\n      },\n    });\n    setShowAddAddressForm(false);\n  };\n  const handleCancel = () => {\n    setShowAddAddressForm(false);\n    setSelectedEditIndex(-1);\n    reset();\n  };\n\n  return (\n    <div>\n      <div className=\"mx-auto mt-12 bg-white max-w-7xl px-4 sm:px-6 lg:px-8\">\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\n          <h1 className=\"text-4xl my-5 font-bold tracking-tight text-gray-900\">\n            Name: {userInfo.name ? userInfo.name : \"New User\"}\n          </h1>\n          <h3 className=\"text-xl my-5 font-bold tracking-tight text-red-900\">\n            email address : {userInfo.email}\n          </h3>\n          {userInfo.role === \"admin\" && (\n            <h3 className=\"text-xl my-5 font-bold tracking-tight text-red-900\">\n              role : {userInfo.role}\n            </h3>\n          )}\n        </div>\n\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\n          <AnimatePresence mode=\"wait\">\n            {!showAddAddressForm && (\n              <motion.button\n                initial={{ opacity: 0, scale: 0.5 }}\n                animate={{ opacity: 1, scale: 1, y: 0 }}\n                exit={{ opacity: 0, y: -50, scale: 0.5 }}\n                transition={{ duration: 0.3 }}\n                onClick={(e) => {\n                  setShowAddAddressForm(true);\n                  setSelectedEditIndex(-1);\n                }}\n                type=\"submit\"\n                className=\"rounded-md my-5 bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n              >\n                Add New Address\n              </motion.button>\n            )}\n          </AnimatePresence>\n          <AnimatePresence mode=\"wait\">\n            {showAddAddressForm ? (\n              <motion.form\n                initial={{ opacity: 0, scaleY: 0.5 }}\n                animate={{ opacity: 1, scaleY: 1, y: 0 }}\n                exit={{ opacity: 0, y: -50, scale: 0.5 }}\n                transition={{ duration: 0.5 }}\n                className=\"bg-white px-5 py-12 mt-12 origin-top\"\n                noValidate\n                onSubmit={handleSubmit((data) => {\n                  handleAddAddress(data);\n                  reset();\n                })}\n              >\n                <div className=\"space-y-12\">\n                  <div className=\"border-b border-gray-900/10 pb-12\">\n                    <h2 className=\"text-2xl font-semibold leading-7 text-gray-900\">\n                      Personal Information\n                    </h2>\n                    <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n                      Use a permanent address where you can receive mail.\n                    </p>\n\n                    <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n                      <div className=\"sm:col-span-4\">\n                        <label\n                          htmlFor=\"name\"\n                          className=\"block text-sm font-medium leading-6 text-gray-900\"\n                        >\n                          Full name\n                        </label>\n                        <div className=\"mt-2\">\n                          <input\n                            type=\"text\"\n                            {...register(\"name\", {\n                              required: \"name is required\",\n                            })}\n                            id=\"name\"\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                          />\n                          {errors.name && (\n                            <p className=\"text-red-500\">\n                              {errors.name.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"sm:col-span-4\">\n                        <label\n                          htmlFor=\"email\"\n                          className=\"block text-sm font-medium leading-6 text-gray-900\"\n                        >\n                          Email address\n                        </label>\n                        <div className=\"mt-2\">\n                          <input\n                            id=\"email\"\n                            {...register(\"email\", {\n                              required: \"email is required\",\n                            })}\n                            type=\"email\"\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                          />\n                          {errors.email && (\n                            <p className=\"text-red-500\">\n                              {errors.email.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"sm:col-span-3\">\n                        <label\n                          htmlFor=\"phone\"\n                          className=\"block text-sm font-medium leading-6 text-gray-900\"\n                        >\n                          Phone\n                        </label>\n                        <div className=\"mt-2\">\n                          <input\n                            id=\"phone\"\n                            {...register(\"phone\", {\n                              required: \"phone is required\",\n                            })}\n                            type=\"tel\"\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                          />\n                          {errors.phone && (\n                            <p className=\"text-red-500\">\n                              {errors.phone.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"col-span-full\">\n                        <label\n                          htmlFor=\"street-address\"\n                          className=\"block text-sm font-medium leading-6 text-gray-900\"\n                        >\n                          Street address\n                        </label>\n                        <div className=\"mt-2\">\n                          <input\n                            type=\"text\"\n                            {...register(\"street\", {\n                              required: \"street is required\",\n                            })}\n                            id=\"street\"\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                          />\n                          {errors.street && (\n                            <p className=\"text-red-500\">\n                              {errors.street.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"sm:col-span-2 sm:col-start-1\">\n                        <label\n                          htmlFor=\"city\"\n                          className=\"block text-sm font-medium leading-6 text-gray-900\"\n                        >\n                          City\n                        </label>\n                        <div className=\"mt-2\">\n                          <input\n                            type=\"text\"\n                            {...register(\"city\", {\n                              required: \"city is required\",\n                            })}\n                            id=\"city\"\n                            autoComplete=\"address-level2\"\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                          />\n                          {errors.city && (\n                            <p className=\"text-red-500\">\n                              {errors.city.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"sm:col-span-2\">\n                        <label\n                          htmlFor=\"state\"\n                          className=\"block text-sm font-medium leading-6 text-gray-900\"\n                        >\n                          State / Province\n                        </label>\n                        <div className=\"mt-2\">\n                          <input\n                            type=\"text\"\n                            {...register(\"state\", {\n                              required: \"state is required\",\n                            })}\n                            id=\"state\"\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                          />\n                          {errors.state && (\n                            <p className=\"text-red-500\">\n                              {errors.state.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"sm:col-span-2\">\n                        <label\n                          htmlFor=\"pinCode\"\n                          className=\"block text-sm font-medium leading-6 text-gray-900\"\n                        >\n                          ZIP / Postal code\n                        </label>\n                        <div className=\"mt-2\">\n                          <input\n                            type=\"text\"\n                            {...register(\"pinCode\", {\n                              required: \"pinCode is required\",\n                            })}\n                            id=\"pinCode\"\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                          />\n                          {errors.pinCode && (\n                            <p className=\"text-red-500\">\n                              {errors.pinCode.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n                    <button\n                      onClick={handleCancel}\n                      type=\"button\"\n                      className=\"rounded-md px-3 py-2 text-sm font-semibold text-grey shadow-sm hover:bg-grey-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"rounded-md bg-custom-gradient px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                    >\n                      Add Address\n                    </button>\n                  </div>\n                </div>\n              </motion.form>\n            ) : null}\n          </AnimatePresence>\n          {userInfo.addresses.length ? (\n            <p className=\"my-5 text-lg text-gray-900\">Your Addresses :</p>\n          ) : (\n            <h1 className=\"text-center font-bold text-3xl mt-10\">\n              No Address Found\n            </h1>\n          )}\n\n          {userInfo.addresses.map((address, index) => (\n            <div key={index}>\n              <div className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-2 border-gray-200\">\n                <div className=\"flex gap-x-4\">\n                  <div className=\"min-w-0 flex-auto\">\n                    <p className=\"text-sm font-semibold leading-6 text-gray-900\">\n                      {address.name}\n                    </p>\n                    <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                      {address.street}\n                    </p>\n                    <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\n                      {address.pinCode}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"hidden sm:flex sm:flex-col sm:items-end\">\n                  <p className=\"text-sm leading-6 text-gray-900\">\n                    Phone: {address.phone}\n                  </p>\n                  <p className=\"text-sm leading-6 text-gray-500\">\n                    {address.city}\n                  </p>\n                </div>\n                <div className=\"hidden sm:flex sm:flex-col sm:items-end\">\n                  <button\n                    onClick={(e) => handleEditForm(index)}\n                    type=\"button\"\n                    className=\"font-medium text-blue-800 hover:text-blue-700\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={(e) => handleRemove(e, index)}\n                    type=\"button\"\n                    className=\"font-medium text-blue-800 hover:text-blue-700\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n              <AnimatePresence mode=\"wait\">\n                {selectedEditIndex === index ? (\n                  <motion.form\n                    initial={{ opacity: 0, scaleY: 0.5 }}\n                    animate={{ opacity: 1, scaleY: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -50, scale: 0.5 }}\n                    transition={{ duration: 0.5 }}\n                    className=\"bg-white px-5 py-12 mt-12 origin-top\"\n                    noValidate\n                    onSubmit={handleSubmit((data) => {\n                      handleEdit(data, index);\n                      reset();\n                    })}\n                  >\n                    <div className=\"space-y-12\">\n                      <div className=\"border-b border-gray-900/10 pb-12\">\n                        <h2 className=\"text-2xl font-semibold leading-7 text-gray-900\">\n                          Personal Information\n                        </h2>\n                        <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n                          Use a permanent address where you can receive mail.\n                        </p>\n\n                        <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n                          <div className=\"sm:col-span-4\">\n                            <label\n                              htmlFor=\"name\"\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\n                            >\n                              Full name\n                            </label>\n                            <div className=\"mt-2\">\n                              <input\n                                type=\"text\"\n                                {...register(\"name\", {\n                                  required: \"name is required\",\n                                })}\n                                id=\"name\"\n                                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                              />\n                              {errors.name && (\n                                <p className=\"text-red-500\">\n                                  {errors.name.message}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"sm:col-span-4\">\n                            <label\n                              htmlFor=\"email\"\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\n                            >\n                              Email address\n                            </label>\n                            <div className=\"mt-2\">\n                              <input\n                                id=\"email\"\n                                {...register(\"email\", {\n                                  required: \"email is required\",\n                                })}\n                                type=\"email\"\n                                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                              />\n                              {errors.email && (\n                                <p className=\"text-red-500\">\n                                  {errors.email.message}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"sm:col-span-3\">\n                            <label\n                              htmlFor=\"phone\"\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\n                            >\n                              Phone\n                            </label>\n                            <div className=\"mt-2\">\n                              <input\n                                id=\"phone\"\n                                {...register(\"phone\", {\n                                  required: \"phone is required\",\n                                })}\n                                type=\"tel\"\n                                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                              />\n                              {errors.phone && (\n                                <p className=\"text-red-500\">\n                                  {errors.phone.message}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"col-span-full\">\n                            <label\n                              htmlFor=\"street-address\"\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\n                            >\n                              Street address\n                            </label>\n                            <div className=\"mt-2\">\n                              <input\n                                type=\"text\"\n                                {...register(\"street\", {\n                                  required: \"street is required\",\n                                })}\n                                id=\"street\"\n                                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                              />\n                              {errors.street && (\n                                <p className=\"text-red-500\">\n                                  {errors.street.message}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"sm:col-span-2 sm:col-start-1\">\n                            <label\n                              htmlFor=\"city\"\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\n                            >\n                              City\n                            </label>\n                            <div className=\"mt-2\">\n                              <input\n                                type=\"text\"\n                                {...register(\"city\", {\n                                  required: \"city is required\",\n                                })}\n                                id=\"city\"\n                                autoComplete=\"address-level2\"\n                                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                              />\n                              {errors.city && (\n                                <p className=\"text-red-500\">\n                                  {errors.city.message}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"sm:col-span-2\">\n                            <label\n                              htmlFor=\"state\"\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\n                            >\n                              State / Province\n                            </label>\n                            <div className=\"mt-2\">\n                              <input\n                                type=\"text\"\n                                {...register(\"state\", {\n                                  required: \"state is required\",\n                                })}\n                                id=\"state\"\n                                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                              />\n                              {errors.state && (\n                                <p className=\"text-red-500\">\n                                  {errors.state.message}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"sm:col-span-2\">\n                            <label\n                              htmlFor=\"pinCode\"\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\n                            >\n                              ZIP / Postal code\n                            </label>\n                            <div className=\"mt-2\">\n                              <input\n                                type=\"text\"\n                                {...register(\"pinCode\", {\n                                  required: \"pinCode is required\",\n                                })}\n                                id=\"pinCode\"\n                                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-blue-800 sm:text-sm sm:leading-6\"\n                              />\n                              {errors.pinCode && (\n                                <p className=\"text-red-500\">\n                                  {errors.pinCode.message}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n                        <button\n                          onClick={(e) => setSelectedEditIndex(-1)}\n                          type=\"submit\"\n                          className=\"rounded-md px-3 py-2 text-sm font-semibold text-grey shadow-sm hover:bg-gray-100 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          type=\"submit\"\n                          className=\"rounded-md bg-custom-gradient px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-800\"\n                        >\n                          Edit Address\n                        </button>\n                      </div>\n                    </div>\n                  </motion.form>\n                ) : null}\n              </AnimatePresence>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import NavBar from '../features/navbar/Navbar';\nimport UserProfile from '../features/user/components/UserProfile';\n\nfunction UserProfilePage() {\n  return (\n    <div>\n      <NavBar>\n        <h1 className='mx-auto text-5xl text-gray-900 font-bold'>My Profile</h1>\n        <UserProfile></UserProfile>\n      </NavBar>\n    </div>\n  );\n}\n\nexport default UserProfilePage;"],"names":["UserProfile","dispatch","useDispatch","userInfo","useSelector","selectUserInfo","_useState","useState","_useState2","_slicedToArray","selectedEditIndex","setSelectedEditIndex","_useState3","_useState4","showAddAddressForm","setShowAddAddressForm","_useForm","selectUserUpdateStatus","useForm","register","handleSubmit","reset","setValue","errors","formState","_jsx","children","_jsxs","className","name","email","role","AnimatePresence","mode","motion","initial","opacity","scale","animate","y","exit","transition","duration","onClick","e","type","scaleY","noValidate","onSubmit","data","address","newUser","_objectSpread","addresses","concat","_toConsumableArray","promise","updateUserAsync","toast","pending","render","success","autoClose","error","handleAddAddress","htmlFor","required","id","message","phone","street","autoComplete","city","state","pinCode","length","map","index","handleEditForm","splice","handleRemove","addressUpdate","handleEdit","NavBar"],"sourceRoot":""}